{"ast":null,"code":"import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore';\nimport firebaseConfig from './firebaseConfig';\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({\n  timestampsInSnapshots: true\n});\nconst Firebase = {\n  // auth\n  auth: () => {\n    return firebase.auth();\n  },\n  loginWithEmail: (email, password) => {\n    return firebase.auth().signInWithEmailAndPassword(email, password);\n  },\n  signupWithEmail: (email, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(email, password);\n  },\n  signOut: () => {\n    return firebase.auth().signOut();\n  },\n  checkUserAuth: user => {\n    return firebase.auth().onAuthStateChanged(user);\n  },\n  // firestore\n  createNewUser: userData => {\n    return firebase.firestore().collection('users').doc(`${userData.uid}`).set(userData);\n  },\n  addCity: city => {\n    return firebase.firestore().collection('cities').add({\n      name: city.name,\n      city: city.city\n    });\n  },\n  addFood: food => {\n    return firebase.firestore().collection('food-data').add({\n      edibleTime: food.edibleTime,\n      feedPeople: food.feedPeople,\n      foodType: food.foodType\n    });\n  },\n  addRestaurant: rest => {\n    return firebase.firestore().collection('restaurant-data').add({\n      name: rest.name,\n      email: rest.email,\n      phone: rest.phone,\n      latlng: new firebase.firestore.GeoPoint(rest.location.lat, rest.location.lng)\n    });\n  },\n  addShelter: rest => {\n    return firebase.firestore().collection('shelter-data').add({\n      name: rest.name,\n      email: rest.email,\n      phone: rest.phone,\n      latlng: new firebase.firestore.GeoPoint(rest.location.lat, rest.location.lng)\n    });\n  },\n  addMapPoint: point => {\n    return firebase.firestore().collection('map-data').add({\n      latlong: new firebase.firestore.GeoPoint(point.lat, point.lng)\n    });\n  },\n  db: () => {\n    return firebase.firestore();\n  }\n};\nexport default Firebase;","map":{"version":3,"sources":["/Users/nikhilkumargautam/Desktop/Projects/food-distro/src/firebase/firebase.js"],"names":["firebase","firestore","firebaseConfig","initializeApp","settings","timestampsInSnapshots","Firebase","auth","loginWithEmail","email","password","signInWithEmailAndPassword","signupWithEmail","createUserWithEmailAndPassword","signOut","checkUserAuth","user","onAuthStateChanged","createNewUser","userData","collection","doc","uid","set","addCity","city","add","name","addFood","food","edibleTime","feedPeople","foodType","addRestaurant","rest","phone","latlng","GeoPoint","location","lat","lng","addShelter","addMapPoint","point","latlong","db"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\nimport firebaseConfig from './firebaseConfig'\n\nfirebase.initializeApp(firebaseConfig)\nfirebase.firestore().settings({timestampsInSnapshots: true})\n\nconst Firebase = {\n  // auth\n  auth: () => {\n    return firebase\n      .auth()\n  },\n  loginWithEmail: (email, password) => {\n    return firebase.auth().signInWithEmailAndPassword(email, password)\n  },\n  signupWithEmail: (email, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\n  },\n  signOut: () => {\n    return firebase.auth().signOut()\n  },\n  checkUserAuth: user => {\n    return firebase.auth().onAuthStateChanged(user)\n  },\n  // firestore\n  createNewUser: userData => {\n    return firebase\n      .firestore()\n      .collection('users')\n      .doc(`${userData.uid}`)\n      .set(userData)\n  },\n  addCity: city => {\n    return firebase\n      .firestore()\n      .collection('cities')\n      .add({\n        name: city.name,\n        city: city.city\n      })\n  },\n  addFood: food => {\n    return firebase\n      .firestore()\n      .collection('food-data')\n      .add({\n        edibleTime: food.edibleTime,\n        feedPeople: food.feedPeople,\n        foodType: food.foodType\n      })\n  },\n  \n    addRestaurant: rest => {\n      return firebase\n      .firestore()\n      .collection('restaurant-data')\n      .add({\n        name: rest.name,\n        email: rest.email,\n        phone: rest.phone,\n        latlng: new firebase.firestore.GeoPoint(rest.location.lat, rest.location.lng)\n      })\n    },\n    addShelter: rest => {\n      return firebase\n      .firestore()\n      .collection('shelter-data')\n      .add({\n        name: rest.name,\n        email: rest.email,\n        phone: rest.phone,\n        latlng: new firebase.firestore.GeoPoint(rest.location.lat, rest.location.lng)\n      })\n    },\n  addMapPoint: point => {\n    return firebase\n      .firestore()\n      .collection('map-data')\n      .add({\n        latlong: new firebase.firestore.GeoPoint(point.lat, point.lng)\n      })\n  },\n  db: () => {\n    return firebase\n      .firestore()\n  }\n}\n\nexport default Firebase\n"]},"metadata":{},"sourceType":"module"}